#!/usr/bin/env python3
"""
Tipalti Payees Backup —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π —á–µ—Ä–µ–∑ pageCursor
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π REST API –º–µ—Ç–æ–¥ —Å pageInfo.nextPageCursor
"""

import json
import sys
from datetime import datetime
from tipalti_rest_api import TipaltiRestAPI
import config_rest


def backup_all_payees_with_cursor():
    """Backup –≤—Å–µ—Ö payees –∏—Å–ø–æ–ª—å–∑—É—è pageCursor –ø–∞–≥–∏–Ω–∞—Ü–∏—é"""
    
    print("üíæ BACKUP –í–°–ï–• PAYEES –° CURSOR –ü–ê–ì–ò–ù–ê–¶–ò–ï–ô")
    print("=" * 60)
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è API –∫–ª–∏–µ–Ω—Ç–∞
        config_rest.validate_config()
        client_id, client_secret, is_sandbox = config_rest.get_validated_config()
        
        print(f"üåê –°—Ä–µ–¥–∞: {'Sandbox' if is_sandbox else 'Production'}")
        print(f"üîó API URL: {'https://api-p.tipalti.com/api/v1' if not is_sandbox else 'https://api.sandbox.tipalti.com/api/v1'}")
        
        api = TipaltiRestAPI(client_id, client_secret, is_sandbox)
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
        print("üîê –ü–æ–ª—É—á–µ–Ω–∏–µ OAuth —Ç–æ–∫–µ–Ω–∞...")
        token = api._get_access_token()
        print(f"‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: {token[:20]}...")
        print()
        
        # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ payees —á–µ—Ä–µ–∑ cursor –ø–∞–≥–∏–Ω–∞—Ü–∏—é
        all_payees = []
        page_cursor = None
        page_number = 1
        total_processed = 0
        
        print("üìÑ –ù–∞—á–∏–Ω–∞–µ–º —Å–±–æ—Ä payees —á–µ—Ä–µ–∑ cursor –ø–∞–≥–∏–Ω–∞—Ü–∏—é...")
        
        while True:
            print(f"üìÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞ {page_number}...", end=" ")
            
            # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
            params = {}
            if page_cursor:
                params['pageCursor'] = page_cursor
                print(f"(cursor: {page_cursor[:10]}...)", end=" ")
            
            try:
                # –î–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –∫ API
                response = api._make_request('GET', '/payees', params=params)
                
                # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ
                payees_batch = response.get('items', [])
                page_info = response.get('pageInfo', {})
                
                print(f"–ø–æ–ª—É—á–µ–Ω–æ {len(payees_batch)} payees")
                
                if not payees_batch:
                    print("    ‚ö†Ô∏è –ü—É—Å—Ç–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ - –∑–∞–≤–µ—Ä—à–∞–µ–º")
                    break
                
                # –î–æ–±–∞–≤–ª—è–µ–º –∫ –æ–±—â–µ–º—É —Å–ø–∏—Å–∫—É
                all_payees.extend(payees_batch)
                total_processed += len(payees_batch)
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                print(f"    üìä –í—Å–µ–≥–æ —Å–æ–±—Ä–∞–Ω–æ: {total_processed} payees")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                next_cursor = page_info.get('nextPageCursor')
                
                if not next_cursor:
                    print("    ‚úÖ –ë–æ–ª—å—à–µ —Å—Ç—Ä–∞–Ω–∏—Ü –Ω–µ—Ç - –∑–∞–≤–µ—Ä—à–∞–µ–º")
                    break
                
                # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º—Å—è –∫ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
                page_cursor = next_cursor
                page_number += 1
                
                # –ó–∞—â–∏—Ç–∞ –æ—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–≥–æ —Ü–∏–∫–ª–∞
                if page_number > 100:  # –ü—Ä–∏ 3800 payees –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ ~40 —Å—Ç—Ä–∞–Ω–∏—Ü
                    print("    ‚ö†Ô∏è –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç —Å—Ç—Ä–∞–Ω–∏—Ü (100) - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞")
                    break
                    
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ {page_number}: {e}")
                break
        
        print()
        print(f"üìä –ò–¢–û–ì–û –°–û–ë–†–ê–ù–û:")
        print(f"  üìÑ –°—Ç—Ä–∞–Ω–∏—Ü –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {page_number}")
        print(f"  üë• Payees –ø–æ–ª—É—á–µ–Ω–æ: {len(all_payees)}")
        print(f"  üîÑ –û–±—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤: {total_processed}")
        
        if not all_payees:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å payees")
            return False
            
        # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        
        backup_data = {
            "metadata": {
                "timestamp": timestamp,
                "datetime": datetime.now().isoformat(),
                "total_payees": len(all_payees),
                "environment": "production" if not is_sandbox else "sandbox",
                "api_method": "cursor_pagination",
                "api_base_url": api.base_url,
                "pages_processed": page_number,
                "backup_type": "full_payees_with_cursor"
            },
            "payees": all_payees
        }
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
        filename = f"payees_backup_cursor_{timestamp}.json"
        
        print(f"üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª: {filename}")
        
        with open(filename, 'w', encoding='utf-8') as f:
            json.dump(backup_data, f, ensure_ascii=False, indent=2)
        
        print()
        print("üéâ BACKUP –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!")
        print("=" * 60)
        print(f"üìÅ –§–∞–π–ª: {filename}")
        print(f"üë• Payees: {len(all_payees)}")
        print(f"üìÑ –°—Ç—Ä–∞–Ω–∏—Ü: {page_number}")
        print(f"‚è∞ –í—Ä–µ–º—è: {backup_data['metadata']['datetime']}")
        print(f"üåê –°—Ä–µ–¥–∞: {backup_data['metadata']['environment']}")
        print(f"üîÑ –ú–µ—Ç–æ–¥: cursor –ø–∞–≥–∏–Ω–∞—Ü–∏—è")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö
        if all_payees:
            print()
            print("üìã –ü–†–ò–ú–ï–† –î–ê–ù–ù–´–•:")
            sample_payee = all_payees[0]
            print(f"  üÜî ID: {sample_payee.get('id', 'N/A')}")
            print(f"  üî¢ RefCode: {sample_payee.get('refCode', 'N/A')}")
            print(f"  üìä Status: {sample_payee.get('status', 'N/A')}")
            print(f"  üìõ Name: {sample_payee.get('name', 'N/A')}")
            
            contact = sample_payee.get('contactInformation', {})
            if contact:
                print(f"  üìß Email: {contact.get('email', 'N/A')}")
                print(f"  üåç Country: {contact.get('beneficiaryCountryCode', 'N/A')}")
        
        return True
        
    except Exception as e:
        print(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    print("üöÄ TIPALTI PAYEES BACKUP")
    print("üì° –ò—Å–ø–æ–ª—å–∑—É–µ—Ç REST API —Å cursor –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π")
    print("üîó –ú–µ—Ç–æ–¥: GET /payees —Å pageCursor –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º")
    print()
    
    success = backup_all_payees_with_cursor()
    
    if success:
        print("\n‚úÖ Backup –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        sys.exit(0)
    else:
        print("\n‚ùå Backup –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π!")
        sys.exit(1)


if __name__ == "__main__":
    main() 