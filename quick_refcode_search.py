#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫ payee –ø–æ refCode
–ò—â–µ–º payee —Å refCode = 22737
"""

from tipalti_rest_api import TipaltiRestAPI
import config_rest
import json

def find_payee_by_refcode(api, target_refcode="22737"):
    """–ù–∞–π—Ç–∏ payee —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º refCode"""
    
    print(f"üîç –ò—â–µ–º payee —Å refCode = {target_refcode}")
    print("=" * 50)
    
    limit = 100
    offset = 0
    page = 1
    
    while True:
        print(f"üìÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞ {page}...", end=" ")
        
        try:
            params = {
                'limit': limit,
                'offset': offset
            }
            
            response = api._make_request('GET', '/payees', params=params)
            payees = response.get('items', [])
            
            print(f"–ø–æ–ª—É—á–µ–Ω–æ {len(payees)} payees")
            
            if not payees:
                break
            
            # –ü–æ–∏—Å–∫ –ø–æ refCode
            for payee in payees:
                ref_code = payee.get('refCode', '')
                
                if ref_code == target_refcode:
                    print(f"\nüéØ –ù–ê–ô–î–ï–ù! Payee —Å refCode = {target_refcode}")
                    return payee
            
            if len(payees) < limit:
                break
            
            offset += limit  
            page += 1
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            offset += limit
            page += 1
            continue
    
    print(f"\n‚ùå Payee —Å refCode = {target_refcode} –ù–ï –Ω–∞–π–¥–µ–Ω")
    return None

def display_payee_info(payee):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ payee"""
    
    if not payee:
        return
    
    contact = payee.get('contactInformation', {})
    
    print(f"\nüìã –ü–û–õ–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û PAYEE:")
    print("=" * 60)
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è
    print(f"üÜî –ü–æ–ª–Ω—ã–π ID: {payee.get('id', 'N/A')}")
    print(f"üî¢ RefCode: {payee.get('refCode', 'N/A')}")
    print(f"üìõ Name (–ø–æ–ª–µ name): {payee.get('name', 'N/A')}")
    print(f"üìä Status: {payee.get('status', 'N/A')}")
    
    # –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    print(f"\nüë§ –ö–û–ù–¢–ê–ö–¢–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:")
    print(f"  First Name: {contact.get('firstName', 'N/A')}")
    print(f"  Last Name: {contact.get('lastName', 'N/A')}")
    print(f"  Company: {contact.get('companyName', 'N/A')}")
    print(f"  Email: {contact.get('email', 'N/A')}")
    print(f"  Phone: {contact.get('phone', 'N/A')}")
    
    # –ê–¥—Ä–µ—Å
    address = contact.get('address', {})
    if address and isinstance(address, dict):
        print(f"\nüè† –ê–î–†–ï–°:")
        print(f"  Line 1: {address.get('line1', 'N/A')}")
        print(f"  Line 2: {address.get('line2', 'N/A')}")
        print(f"  City: {address.get('city', 'N/A')}")
        print(f"  State: {address.get('state', 'N/A')}")
        print(f"  Postal Code: {address.get('postalCode', 'N/A')}")
    
    # –°—Ç—Ä–∞–Ω—ã
    print(f"\nüåç –ì–ï–û–ì–†–ê–§–ò–Ø:")
    print(f"  Beneficiary Country: {contact.get('beneficiaryCountryCode', 'N/A')}")
    print(f"  Payment Country: {contact.get('paymentCountryCode', 'N/A')}")
    
    # –î–∞—Ç—ã –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    print(f"\nüìÖ –î–ê–¢–´:")
    print(f"  Created: {payee.get('created', 'N/A')}")
    print(f"  Last Updated: {payee.get('lastUpdated', 'N/A')}")
    
    print(f"\nüí∞ –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:")
    print(f"  Tax ID: {contact.get('taxId', 'N/A')}")
    
    # –ü–æ–ª–Ω—ã–π JSON
    print(f"\nüìÑ –ü–û–õ–ù–´–ï –î–ê–ù–ù–´–ï (JSON):")
    print("=" * 60)
    print(json.dumps(payee, indent=2, ensure_ascii=False))

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    print(f"üîç –ü–û–ò–°–ö PAYEE –ü–û REFCODE = 22737")
    print("=" * 60)
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        config_rest.validate_config()
        client_id, client_secret, is_sandbox = config_rest.get_validated_config()
        
        print(f"üåê –°—Ä–µ–¥–∞: {'Sandbox' if is_sandbox else 'Production'}")
        
        api = TipaltiRestAPI(client_id, client_secret, is_sandbox)
        
        # –ü–æ–∏—Å–∫
        payee = find_payee_by_refcode(api, "22737")
        
        # –†–µ–∑—É–ª—å—Ç–∞—Ç 
        if payee:
            display_payee_info(payee)
            
            # –ü—Ä–æ–≤–µ—Ä–∏–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ Matheus de Morais
            contact = payee.get('contactInformation', {})
            first_name = contact.get('firstName', '')
            last_name = contact.get('lastName', '')
            full_name = f"{first_name} {last_name}".strip()
            
            print(f"\nüéØ –ü–†–û–í–ï–†–ö–ê –ò–ú–ï–ù–ò:")
            print(f"  –ü–æ–ª–Ω–æ–µ –∏–º—è: {full_name}")
            
            if "matheus" in full_name.lower() and "morais" in full_name.lower():
                print(f"  ‚úÖ –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–û: –≠—Ç–æ Matheus de Morais!")
            elif "matheus" in full_name.lower():
                print(f"  ‚ö†Ô∏è  –ò–º—è —Å–æ–¥–µ—Ä–∂–∏—Ç 'Matheus', –Ω–æ —Ñ–∞–º–∏–ª–∏—è –º–æ–∂–µ—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è")
            else:
                print(f"  ‚ùå –ò–º—è –ù–ï —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å 'Matheus de Morais'")
                
        else:
            print(f"\n‚ùå –†–ï–ó–£–õ–¨–¢–ê–¢: Payee —Å refCode = 22737 –ù–ï –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ")
            print(f"   –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
            print(f"   - RefCode –Ω–µ–≤–µ—Ä–Ω—ã–π")
            print(f"   - Payee –±—ã–ª —É–¥–∞–ª–µ–Ω")
            print(f"   - –ù–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥—Ä—É–≥–æ–º –∞–∫–∫–∞—É–Ω—Ç–µ")
    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main() 